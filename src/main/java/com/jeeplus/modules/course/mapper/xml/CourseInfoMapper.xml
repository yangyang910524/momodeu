<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.course.mapper.CourseInfoMapper">

    <resultMap id="courseInfoResult" type="CourseInfo">
   		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="sort" column="sort" />
		<result property="parentIds" column="parentIds" />
		<association property="hasChildren" column="id" select="hasChildren" />
    </resultMap>
    
	<sql id="courseInfoColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.parent_id AS "parent.id",
		a.parent_ids AS "parentIds",
		a.name AS "name",
		a.sort AS "sort",
		a.cover AS "cover",
		a.title_type AS "titleType",
		a.level AS "level",
		a.state AS "state"
	</sql>
	

	

	<sql id="courseInfoJoins">
		
	</sql>
	

    
	<select id="get" resultType="CourseInfo">
		SELECT 
			<include refid="courseInfoColumns"/>
		FROM course_info a
		<include refid="courseInfoJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="CourseInfo">
		SELECT 
			<include refid="courseInfoColumns"/>
		FROM course_info a
		<include refid="courseInfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="parent != null and parent.id != null and parent.id != ''">
				AND a.parent_id = #{parent.id}
			</if>
			<if test="parentIds != null and parentIds != ''">
				AND a.parent_ids LIKE 
					<if test="dbName == 'oracle'">'%'||#{parentIds}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{parentIds}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{parentIds},'%')</if>
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
		</where>
		ORDER BY cast( a.sort   as   SIGNED   INTEGER) ASC
	</select>
	
	<select id="findAllList" resultType="CourseInfo">
		SELECT 
			<include refid="courseInfoColumns"/>
		FROM course_info a
		<include refid="courseInfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>
		ORDER BY cast( a.sort   as   SIGNED   INTEGER) ASC
	</select>
	
	<select id="getChildren" parameterType="String" resultMap="courseInfoResult">  
        select * from course_info where parent_id = #{id}  ORDER BY cast( sort   as   SIGNED   INTEGER) ASC
    </select> 
     
    <select id="hasChildren" parameterType="String" resultType="Boolean">  
         select case when exists(select 1 from course_info where parent_id = #{id}) then 1 else 0 end ${dual}
    </select>
    
	<select id="findByParentIdsLike" resultType="CourseInfo">
		SELECT
			a.id,
			a.parent_id AS "parent.id",
			a.parent_ids
		FROM course_info a
		<include refid="courseInfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.parent_ids LIKE #{parentIds}
		</where>
		ORDER BY cast( a.sort   as   SIGNED   INTEGER) ASC
	</select>
	
	<insert id="insert">
		INSERT INTO course_info(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			parent_id,
			parent_ids,
			name,
			sort,
			cover,
			title_type,
			level,
			state
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{parent.id},
			#{parentIds},
			#{name},
			#{sort},
			#{cover},
			#{titleType},
			#{level},
			#{state}
		)
	</insert>
	
	<update id="update">
		UPDATE course_info SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			parent_id = #{parent.id},
			parent_ids = #{parentIds},
			name = #{name},
			sort = #{sort},
			cover = #{cover},
			title_type = #{titleType},
			level = #{level},
			state = #{state}
		WHERE id = #{id}
	</update>
	
	<update id="updateParentIds">
		UPDATE course_info SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM course_info
		WHERE id = #{id} OR parent_ids LIKE 
		<if test="dbName == 'oracle'">'%,'||#{id}||',%'</if>
		<if test="dbName == 'mssql'">'%,'+#{id}+',%'</if>
        <if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE course_info SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} OR parent_ids LIKE 
		<if test="dbName == 'oracle'">'%,'||#{id}||',%'</if>
		<if test="dbName == 'mssql'">'%,'+#{id}+',%'</if>
        <if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>


    <select id="findCourseList" resultType="CourseInfo">
        SELECT
        <include refid="courseInfoColumns"/>
        FROM course_info a
        <include refid="courseInfoJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            ${dataScope}
            AND a.parent_id = '0'
			AND not exists
			(
				select 1 from sys_coures_office sco where sco.couresid=a.id and sco.officeid=#{office.id}
			)
            <if test="name != null and name != ''">
                AND a.name LIKE
                <if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
            </if>
        </where>
		ORDER BY cast( a.sort   as   SIGNED   INTEGER) ASC
    </select>

	<select id="findChapterList" resultType="CourseInfo">
		SELECT
			a.id AS "id",
			a.create_by AS "createBy.id",
			a.create_date AS "createDate",
			a.update_by AS "updateBy.id",
			a.update_date AS "updateDate",
			a.remarks AS "remarks",
			a.del_flag AS "delFlag",
			a.parent_ids AS "parentIds",
			concat(p.name,' : ',a.name) AS "name",
			a.sort AS "sort",
			a.title_type AS "titleType",
			a.parent_id AS "parent.id",
			p.cover AS "cover",
			p.level AS "level",
			p.state AS "state"
		FROM course_info a
		left join course_info p on a.parent_id=p.id
		<include refid="courseInfoJoins"/>
		<where>
			AND a.title_type='2'
			<if test="office!=null and office.id != null and office.id != ''">
				AND EXISTS (
					select 1 from sys_coures_office sco where sco.couresid=a.id
				)
			</if>
			<if test="state != null and state != ''">
				AND p.state =#{state}
			</if>
			<if test="level != null and level != ''">
				AND p.level =#{level}
			</if>

			<if test="name != null and name != ''">
				AND a.name LIKE
				<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>

			<if test="parent!=null and parent.name != null and parent.name != ''">
				AND p.name LIKE
				<if test="dbName == 'oracle'">'%'||#{parent.name}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{parent.name}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{parent.name},'%')</if>
			</if>
		</where>
		ORDER BY cast( p.sort   as   SIGNED   INTEGER) ASC,cast( a.sort   as   SIGNED   INTEGER) ASC
	</select>

	<update id="release">
		UPDATE course_info SET
			state = #{state}
		WHERE id = #{id}
	</update>
</mapper>