<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.course.mapper.CourseDataMapper">
    
	<sql id="courseDataColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.data AS "data",
		a.courseid AS "courseInfo.id",
		concat(p.name,' : ',b.name) AS "courseInfo.name",

		p.state AS "courseInfo.state",
		p.level AS "courseInfo.level",

		p.id AS "courseInfo.parent.id",
		p.name AS "courseInfo.parent.name"
	</sql>
	
	<sql id="courseDataJoins">
			LEFT JOIN course_info b ON b.id = a.courseid
			LEFT JOIN course_info p ON b.parent_id = p.id
	</sql>
	
    
	<select id="get" resultType="CourseData" >
		SELECT 
			<include refid="courseDataColumns"/>
		FROM course_data a
		<include refid="courseDataJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="CourseData" >
		SELECT 
			<include refid="courseDataColumns"/>
		FROM course_data a
		<include refid="courseDataJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="data != null and data != ''">
				AND a.data = #{data}
			</if>
                    <if test="courseInfo != null  and courseInfo.id != null and courseInfo.id != ''">
                        AND (b.id = #{courseInfo.id} OR b.parent_ids LIKE
                        <if test="dbName == 'oracle'">'%,'||#{courseInfo.id}||',%')</if>
                        <if test="dbName == 'mysql'">CONCAT('%,', #{courseInfo.id}, ',%'))</if>
                        <if test="dbName == 'mssql'">'%'+#{courseInfo.id}+'%')</if>
                    </if>

			<if test="courseInfo != null  and courseInfo.parent != null and courseInfo.parent.name != null and courseInfo.parent.name != ''">
				AND p.name LIKE CONCAT('%,', #{courseInfo.parent.name}, ',%'))
			</if>

			<if test="courseInfo != null  and courseInfo.name != null and courseInfo.name != ''">
				AND b.name LIKE CONCAT('%,', #{courseInfo.name}, ',%'))
			</if>

			<if test="courseInfo != null  and courseInfo.level != null and courseInfo.level != ''">
				AND p.level LIKE CONCAT('%,', #{courseInfo.level}, ',%'))
			</if>

			<if test="courseInfo != null  and courseInfo.state != null and courseInfo.state != ''">
				AND p.state LIKE CONCAT('%,', #{courseInfo.state}, ',%'))
			</if>

		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY cast( p.sort   as   SIGNED   INTEGER) ASC,cast( b.sort   as   SIGNED   INTEGER),a.create_date desc
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="CourseData" >
		SELECT 
			<include refid="courseDataColumns"/>
		FROM course_data a
		<include refid="courseDataJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO course_data(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			data,
			courseid
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{data},
			#{courseInfo.id}
		)
	</insert>
	
	<update id="update">
		UPDATE course_data SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			data = #{data},
			courseid = #{courseInfo.id}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM course_data
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE courseid = #{courseInfo.id}
			</otherwise>
		</choose>
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE course_data SET 
			del_flag = #{DEL_FLAG_DELETE}
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE courseid = #{courseInfo.id}
			</otherwise>
		</choose>
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="CourseData" statementType="STATEMENT">
		select * FROM course_data  where ${propertyName} = '${value}'
	</select>
	
</mapper>