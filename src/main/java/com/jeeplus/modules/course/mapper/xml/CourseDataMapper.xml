<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.course.mapper.CourseDataMapper">
    
	<sql id="courseDataColumns">
		ifnull(a.id,'') AS "id",
		ifnull(a.create_by,'') AS "createBy.id",
		a.create_date AS "createDate",
		ifnull(a.update_by,'') AS "updateBy.id",
		a.update_date AS "updateDate",
		ifnull(a.remarks,'') AS "remarks",
		ifnull(a.del_flag,'') AS "delFlag",
		ifnull(a.data,'') AS "data",
		ifnull(b.id,'') AS "courseInfo.id",
		ifnull(b.name,'') AS "courseInfo.name",
		ifnull(b.title_type,'') AS "courseInfo.titleType",

		ifnull(p.id,'') AS "father.id",
		ifnull(p.name,'') AS "father.name",
		ifnull(p.cover,'') AS "father.cover",
		ifnull(p.level,'') AS "father.level",
		ifnull(p.state,'') AS "father.state",
		ifnull(p.title_type,'') AS "father.titleType",
		ifnull(p.sort,'') AS "father.sort"
	</sql>
	
	<sql id="courseDataJoins">
			LEFT JOIN course_info b ON b.id = a.courseid
			LEFT JOIN course_info p ON b.parent_id = p.id
	</sql>
	
    
	<select id="get" resultType="CourseData" >
		SELECT 
			<include refid="courseDataColumns"/>
		FROM course_data a
		<include refid="courseDataJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="CourseData" >
		SELECT 
			<include refid="courseDataColumns"/>
		FROM course_data a
		<include refid="courseDataJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="data != null and data != ''">
				AND a.data = #{data}
			</if>
            <if test="courseInfo != null  and courseInfo.id != null and courseInfo.id != ''">
                AND (b.id = #{courseInfo.id} OR b.parent_ids LIKE
                <if test="dbName == 'oracle'">'%,'||#{courseInfo.id}||',%')</if>
                <if test="dbName == 'mysql'">CONCAT('%,', #{courseInfo.id}, ',%'))</if>
                <if test="dbName == 'mssql'">'%'+#{courseInfo.id}+'%')</if>
            </if>

            <if test="father != null  and father.name != null and father.name != ''">
                AND p.name LIKE CONCAT('%', #{father.name}, '%')
            </if>

            <if test="courseInfo != null  and courseInfo.name != null and courseInfo.name != ''">
                AND b.name LIKE CONCAT('%', #{courseInfo.name}, '%')
            </if>

            <if test="father != null  and father.level != null and father.level != ''">
                AND p.level = #{father.level}
            </if>

            <if test="father != null  and father.state != null and father.state != ''">
                AND p.state =#{father.state}
            </if>


        </where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY cast( p.sort   as   SIGNED   INTEGER) ASC,cast( b.sort   as   SIGNED   INTEGER),a.create_date desc
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="CourseData" >
		SELECT 
			<include refid="courseDataColumns"/>
		FROM course_data a
		<include refid="courseDataJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO course_data(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			data,
			courseid
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{data},
			#{courseInfo.id}
		)
	</insert>
	
	<update id="update">
		UPDATE course_data SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			data = #{data},
			courseid = #{courseInfo.id}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM course_data
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE courseid = #{courseInfo.id}
			</otherwise>
		</choose>
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE course_data SET 
			del_flag = #{DEL_FLAG_DELETE}
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE courseid = #{courseInfo.id}
			</otherwise>
		</choose>
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="CourseData" statementType="STATEMENT">
		select * FROM course_data  where ${propertyName} = '${value}'
	</select>

    <select id="findCourseList" resultType="CourseData" >
        SELECT
        <include refid="courseDataColumns"/>
        FROM course_data a
        <include refid="courseDataJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            AND p.state='1'
            <if test="data != null and data != ''">
                AND a.data = #{data}
            </if>
            <if test="courseInfo != null  and courseInfo.id != null and courseInfo.id != ''">
                AND (b.id = #{courseInfo.id} OR b.parent_ids LIKE
                <if test="dbName == 'oracle'">'%,'||#{courseInfo.id}||',%')</if>
                <if test="dbName == 'mysql'">CONCAT('%,', #{courseInfo.id}, ',%'))</if>
                <if test="dbName == 'mssql'">'%'+#{courseInfo.id}+'%')</if>
            </if>

            <if test="father != null  and father.name != null and father.name != ''">
                AND p.name LIKE CONCAT('%', #{father.name}, '%')
            </if>

            <if test="courseInfo != null  and courseInfo.name != null and courseInfo.name != ''">
                AND b.name LIKE CONCAT('%', #{courseInfo.name}, '%')
            </if>

            <if test="father != null  and father.level != null and father.level != ''">
                AND p.level = #{father.level}
            </if>

            <if test="officeid != null  and officeid != ''">
                AND not exists(
                  select 1 from sys_coures_office suo where suo.officeid=#{officeid} and suo.couresid=a.id
                )
            </if>
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY cast( p.sort   as   SIGNED   INTEGER) ASC,cast( b.sort   as   SIGNED   INTEGER),a.create_date desc
            </otherwise>
        </choose>
    </select>
</mapper>