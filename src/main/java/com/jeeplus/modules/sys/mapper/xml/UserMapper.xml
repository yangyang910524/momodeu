<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.sys.mapper.UserMapper">

	<resultMap id="userResult" type="User">
		<id property="id" column="id" />
		<result property="company.id" column="company.id" />
		<result property="loginName" column="loginName" />
		<result property="password" column="password" />
		<result property="no" column="no" />
        <result property="name" column="name" />
        <result property="englishName" column="englishName" />
        <result property="score" column="score" />
		<result property="email" column="email" />
		<result property="phone" column="phone" />
		<result property="mobile" column="mobile" />
		<result property="photo" column="photo"/>
		<result property="company.name" column="company.name" />
		<result property="office.id" column="office.id" />
		<result property="office.name" column="office.name" />
		<result property="office.parentIds" column="office.parentIds" />
        <result property="createBy.id" column="createBy.id" />
        <result property="createDate" column="createDate" />
        <result property="updateBy.id" column="updateBy.id" />
        <result property="updateDate" column="updateDate" />
        <result property="delFlag" column="delFlag" />
        <result property="userType" column="userType" />

        <result property="loginIp" column="loginIp" />
        <result property="loginDate" column="loginDate" />
        <result property="loginFlag" column="loginFlag" />

		<collection property="roleList" ofType="Role">
			<id property="id" column="role.id" />
			<result property="name" column="role.name"/>
			<result property="enname" column="role.enname"/>
		</collection>
	</resultMap>

	<sql id="userColumns">
    	nvl(a.id,'') as id,
    	nvl(a.login_name,'') AS "loginName",
    	nvl(a.password,'') as password,
    	nvl(a.no,'') as no,
		nvl(a.name,'') as name,
		nvl(a.english_name,'') AS "englishName",
		nvl(a.score,'') as score,
		nvl(a.user_type,'') as "userType",
		nvl(a.email,'') as email,
		nvl(a.phone,'') as phone,
		nvl(a.mobile,'') as mobile,
		nvl(a.login_ip,'') as "loginIp",
		nvl(a.login_date,'') as "loginDate",
		nvl(a.remarks,'') as remarks,
		nvl(a.login_flag,'') as "loginFlag",
		nvl(a.photo,'') as photo,
		nvl(a.qrcode,'') as qrcode,
		nvl(a.sign,'') as sign,
		nvl(a.create_by,'') AS "createBy.id",
		nvl(a.create_date,'') AS "createDate",
		nvl(a.update_by,'') AS "updateBy.id",
		nvl(a.update_date,'') AS "updateDate",
		nvl(a.del_flag,'') AS "delFlag",
		nvl(xsso.id,'') AS "office.id",
		nvl(xsso.name,'') AS "office.name",
		nvl(xsso.level,'') AS "office.level"
    </sql>
    
    <sql id="userJoins">
        left join (
          select
          userid,
          officeid
          from sys_user_office
          where user_type='3'
        ) xssuo on xssuo.userid=a.id
        left join sys_office xsso on xsso.id=xssuo.officeid
    </sql>


	
	<!-- 根据编号获得用户 -->
	<select id="get" resultMap="userResult">
		SELECT
			<include refid="userColumns"/>,
			r.id AS "role.id",
			r.name AS "role.name",
			r.enname AS "role.enname"
		FROM sys_user a
		<include refid="userJoins"/>
		LEFT JOIN sys_user_role ur ON ur.user_id = a.id
		LEFT JOIN sys_role r ON r.id = ur.role_id
		WHERE a.id = #{id}
	</select>
	
	<!-- 根据登录名查询用户 -->
	<select id="getByLoginName" resultMap="userResult" parameterType="User">
		SELECT
			<include refid="userColumns"/>,
			r.id AS "role.id",
			r.name AS "role.name",
			r.enname AS "role.enname"
		FROM sys_user a
		<include refid="userJoins"/>
		LEFT JOIN sys_user_role ur ON ur.user_id = a.id
		LEFT JOIN sys_role r ON r.id = ur.role_id
		WHERE a.login_name = #{loginName} AND a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	
	<!-- 分页查询用户信息 -->
	<select id="findList" resultMap="userResult">
		SELECT
			<include refid="userColumns"/>
			<if test="role != null and role.id != null and role.id != ''">
				,
				r.id AS "role.id",
				r.name AS "role.name",
				r.enname AS "role.enname"
			</if>
		FROM sys_user a
		<include refid="userJoins"/>
		<if test="role != null and role.id != null and role.id != ''">
			LEFT JOIN sys_user_role ur ON ur.user_id = a.id
			LEFT JOIN sys_role r ON r.id = ur.role_id
		</if>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="role != null and role.id != null and role.id != ''">
		   AND ur.role_id = #{role.id}
		</if>
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		<if test="!currentUser.admin">
			AND a.id != '1'
		</if>
		<if test="loginName != null and loginName != ''">
			AND a.login_name like 
					<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
					<if test="dbName == 'mssql'">'%'+#{loginName}+'%'</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like
			<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
			<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
		</if>
		<if test="mobile != null and mobile != ''">
			AND a.mobile like
			<if test="dbName == 'oracle'">'%'||#{mobile}||'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{mobile}, '%')</if>
			<if test="dbName == 'mssql'">'%'+#{mobile}+'%'</if>
		</if>
		<if test="englishName != null and englishName != ''">
			AND a.english_name like
			<if test="dbName == 'oracle'">'%'||#{englishName}||'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{englishName}, '%')</if>
			<if test="dbName == 'mssql'">'%'+#{englishName}+'%'</if>
		</if>
		<if test="userType != null and userType != ''">
			AND a.user_type =#{userType}
		</if>
		<!-- 数据范围过滤 -->
		${dataScope}
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
                ORDER BY a.create_date desc
			</otherwise>
		</choose>
	</select>
	
	
	<!-- 根据部门查询用户信息 -->
	<select id="findListByOffice" resultMap="userResult">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>

		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		
		<if test="loginName != null and loginName != ''">
			AND a.login_name like 
					<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
					<if test="dbName == 'mssql'">'%'+#{loginName}+'%'</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
		</if>
		<!-- 数据范围过滤 -->
		${dataScope}
		<!-- 排序 -->
        ORDER BY a.create_date desc
	
	</select>
	
	<!-- 根据OfficeId获取用户（树查询用户时用） -->
	<select id="findUserByOfficeId" resultMap="userResult" useCache="true">
		SELECT
			a.id, a.name, a.login_name
		FROM sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.office_id = #{office.id}
		ORDER BY a.create_date desc
	</select>
	
	<!-- 查询全部用户 -->
	<select id="findAllList" resultMap="userResult">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY a.create_date desc
	</select>
	
	<!-- 查询全部用户数目 -->
	<select id="findAllCount" resultType="long">
		SELECT
			COUNT(1)
		FROM sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	
	<!-- 插入用户 -->
	<insert id="insert">
		INSERT INTO sys_user(
			id, 
			company_id, 
			office_id, 
			login_name, 
			password, 
			no, 
			name,
			english_name,
			score,
			user_type,
			email, 
			phone, 
			mobile, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			remarks, 
			login_flag, 
			photo, 
			qrcode,
			del_flag
		) VALUES (
			#{id}, 
			#{company.id}, 
			#{office.id}, 
			#{loginName}, 
			#{password}, 
			#{no}, 
			#{name},
			#{englishName},
			#{score},
			#{userType},
			#{email}, 
			#{phone}, 
			#{mobile}, 
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{remarks}, 
			#{loginFlag}, 
			#{photo}, 
			#{qrCode},
			#{delFlag}
		)
	</insert>
	
	<!-- 更新用户 -->
	<update id="update">
		UPDATE sys_user SET 
			company_id = #{company.id}, 
			office_id = #{office.id}, 
			login_name = #{loginName}, 
			password = #{password}, 
			no = #{no}, 
			name = #{name},
			english_name = #{englishName},
			score = #{score},
			email = #{email},
			phone = #{phone}, 
			mobile = #{mobile}, 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			login_flag = #{loginFlag},
			photo = #{photo},
			qrcode = #{qrCode}
		WHERE id = #{id}
	</update>
	
	<!-- 删除用户和角色关联表数据 -->
	<delete id="deleteUserRole">
		DELETE FROM sys_user_role WHERE user_id = #{id}
	</delete>
	
	<!-- 插入用户和角色关联表数据 -->
	<insert id="insertUserRole">
		INSERT INTO sys_user_role(user_id, role_id)
		<foreach collection="roleList" item="role" separator=" union all ">
			SELECT #{id}, #{role.id}  ${dual} 
		</foreach>
	</insert>
	
	<!-- 更新用户信息  -->
	<update id="updateUserInfo">
		UPDATE sys_user SET 
			name = #{name},
			english_name = #{englishName},
			score = #{score},
			email = #{email}, 
			phone = #{phone}, 
			mobile = #{mobile}, 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			photo = #{photo},
			qrcode = #{qrCode},
			sign = #{sign}
		WHERE id = #{id}
	</update>
	
	<!-- 更新用户密码 -->
	<update id="updatePasswordById">
		UPDATE sys_user SET 
			password = #{password} 
		WHERE id = #{id}
	</update>
	
	<!-- 更新登录信息，如登录IP、登录时间 -->
	<update id="updateLoginInfo">
		UPDATE sys_user SET 
			login_ip = #{loginIp}, 
			login_Date = #{loginDate} 
		WHERE id = #{id}
	</update>
	
	<!-- 物理删除用户 -->
	<update id="delete">
		DELETE FROM sys_user 
		WHERE id = #{id}
	</update>
	
	<!-- 逻辑删除用户 -->
	<update id="deleteByLogic">
		UPDATE sys_user SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty"  resultType="User" statementType="STATEMENT">
		select * from sys_user where ${propertyName} = '${value}'
	</select>
	<!-- 添加好友 -->
	<insert id="insertFriend">
		INSERT INTO sys_user_friend(
			id, 
			userId, 
			friendId
		) VALUES (
			#{id}, 
			#{userId}, 
			#{friendId}
		)
	</insert>
	
	<!-- 根据用户id和好友id获取唯一记录 -->
	<select id="findFriend" resultType="User">
		SELECT
			*
		FROM sys_user a
		LEFT JOIN sys_user_friend p ON p.userId = a.id
		WHERE p.userId = #{userId} and p.friendId = #{friendId}
	</select>
	
	<!-- 删除好友 -->
	<select id="deleteFriend">
		DELETE FROM sys_user_friend  WHERE userId = #{userId} and friendId = #{friendId}
	</select>
	
		<!-- 查询我的好友列表 -->
	<select id="findFriends"  resultMap="userResult">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		LEFT JOIN sys_user_friend p ON p.friendId = a.id
		WHERE  p.userId = #{id}
	</select>
	
		<!-- 根据条件检索用户，添加到好友列表 -->
	<select id="searchUsers"  resultMap="userResult">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
	  	<include refid="userJoins"/>
		<if test="name != null and name != ''">
			WHERE  a.name like 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
		</if>
	</select>

    <select id="findUserByOffice" resultType="com.jeeplus.modules.sys.entity.User">
        SELECT
          <include refid="userColumns"/>
        FROM sys_user a
        <include refid="userJoins"/>
        <where>
            <if test="loginName != null and loginName != ''">
                AND a.login_name like
                <if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
                <if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
                <if test="dbName == 'mssql'">'%'+#{loginName}+'%'</if>
            </if>
			<if test="name != null and name != ''">
				AND a.name like
				<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
				<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
				<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
			</if>
			<if test="englishName != null and englishName != ''">
				AND a.english_name like
				<if test="dbName == 'oracle'">'%'||#{englishName}||'%'</if>
				<if test="dbName == 'mysql'">CONCAT('%', #{englishName}, '%')</if>
				<if test="dbName == 'mssql'">'%'+#{englishName}+'%'</if>
			</if>
			<if test="mobile != null and mobile != ''">
				AND a.mobile like
				<if test="dbName == 'oracle'">'%'||#{mobile}||'%'</if>
				<if test="dbName == 'mysql'">CONCAT('%', #{mobile}, '%')</if>
				<if test="dbName == 'mssql'">'%'+#{mobile}+'%'</if>
			</if>
            <if test="userType =='2'.toString()">
                and not exists (
                  select 1 from sys_user_office suo where suo.userid=a.id and suo.officeid=#{office.id}
                )
                and a.user_type='2'
            </if>
            <if test="userType =='3'.toString()">
                and not exists (
                  select 1 from sys_user_office suo where suo.userid=a.id
                )
                and a.user_type='3'
            </if>
        </where>
    </select>

    <select id="findTeacherListByOffice" resultMap="userResult">
        SELECT
            su.id as id,
            su.login_name AS "loginName",
            su.name,
            su.english_name AS "englishName",
            su.user_type as "userType",
            su.email,
            su.phone,
            su.mobile,
            su.remarks,
            su.photo
        FROM
        sys_user_office suo
        left join sys_user su on suo.userid=su.id
        where suo.user_type in ('1','2')
        and officeid=#{officeid}
        order by case when suo.user_type='2' then 1 else 1 end
    </select>

    <select id="findStudentListByOffice" resultType="com.jeeplus.modules.sys.entity.User">
        SELECT
        su.id as id,
        su.login_name AS "loginName",
        su.name,
        su.english_name AS "englishName",
        su.score,
        su.user_type as "userType",
        su.email,
        su.phone,
        su.mobile,
        su.remarks,
        su.photo
        FROM
        sys_user_office suo
        left join sys_user su on suo.userid=su.id
        where suo.user_type ='3'
        and officeid=#{officeid}
        order by cast( su.score   as   SIGNED   INTEGER) desc
    </select>

	<update id="updateScore">
		UPDATE sys_user SET
			score = #{score}
		WHERE id = #{id}
	</update>
</mapper>