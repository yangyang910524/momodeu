<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.sys.mapper.ClassesMapper">
    
	<sql id="classesColumns">
		a.id AS "id",
		a.name AS "name",
		a.sort AS "sort",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		suo.userid AS "classroomTeacher.id",
		so.name AS "classroomTeacher.name",
		(select count(*) from sys_user_office suo where  user_type in ('1','2') and a.id=suo.officeid) AS "teacherTotal",
		(select count(*) from sys_user_office suo where  user_type='3' and a.id=suo.officeid) AS "studentTotal",
		(select count(*) from sys_coures_office sco where a.id=sco.officeid) AS "courseTotal",
		(select count(*) from sys_homework_office sho where a.id=sho.officeid) AS "homeworkTotal",
		a.campus as "campus",
		a.level as "level"
	</sql>
	
	<sql id="classesJoins">
      left join (select officeid,userid from sys_user_office where user_type='1') suo on suo.officeid=a.id
      left join sys_user so on suo.userid=so.id
	</sql>
	
    
	<select id="get" resultType="Classes" >
		SELECT 
			<include refid="classesColumns"/>
		FROM sys_office a
		<include refid="classesJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Classes" >
		SELECT 
			<include refid="classesColumns"/>
		FROM sys_office a
		<include refid="classesJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="campus != null and campus != ''">
				AND a.campus =#{campus}
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE
				<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Classes" >
		SELECT 
			<include refid="classesColumns"/>
		FROM sys_office a
		<include refid="classesJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO sys_office(
			id,
			name,
			sort,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			campus,
			level,
			del_flag
		) VALUES (
			#{id},
			#{name},
			#{sort},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{campus},
			#{level},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_office SET 	
			name = #{name},
			sort = #{sort},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			campus = #{campus},
			level = #{level}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM sys_office
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE sys_office SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="Classes" statementType="STATEMENT">
		select * FROM sys_office  where ${propertyName} = '${value}'
	</select>
	
</mapper>